<!-- views/admin/order-management.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Management</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.8/dist/sweetalert2.all.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/admin/order-management.css" />

    <style>
        
    </style>
</head>
<body>
    <div class="dashboard-container">
        <aside class="side-panel">
            <div class="logo">Bitwise</div>
            <ul class="unique-sidebar-menu">
                <li class="active"><a href="/admin/dashboard">Dashboard</a></li>
                <li><a href="/admin/user-management">Users</a></li>
                <li><a href="/admin/product-management">Products</a></li>
                <li><a href="/admin/orders/manage">Orders</a></li>
                <li><a href="/admin/category-management">Categories</a></li>
                <li><a href="/admin/coupon-management">Coupon</a></li>
                <li><a href="/admin/offer-management">Offers</a></li>
                <li><a href="/admin/inventory">Inventory</a></li>
                <li><a href="/admin/sales-report">Sales</a></li>
                <li><a href="/admin/transactions">Transactions</a></li>
            </ul>
        </aside>

        <div class="main-content">
            <header>
                <h1>Order Management</h1>
            </header>

            <div class="filters">
                <input type="text" id="searchInput" placeholder="Search by Order ID or User" value="<%= query.search || '' %>">
                <select id="statusFilter" onchange="filterOrders()">
                    <option value="">All Statuses</option>
                    <option value="Pending" <%= query.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                    <option value="Processing" <%= query.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                    <option value="Shipped" <%= query.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                    <option value="Delivered" <%= query.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                    <option value="Cancelled" <%= query.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                    <option value="Returned" <%= query.status === 'Returned' ? 'selected' : '' %>>Returned</option>
                    <option value="Return Accepted" <%= query.status === 'Return Accepted' ? 'selected' : '' %>>Return Accepted</option>
                    <option value="Return Rejected" <%= query.status === 'Return Rejected' ? 'selected' : '' %>>Return Rejected</option>


                </select>
                <button onclick="searchOrders()">Search</button>
                <button onclick="clearFilters()">Clear</button>
            </div>

            <div class="card">
                <table class="order-table">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Order Date</th>
                            <th>User</th>
                            <th>Total</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="orderTableBody">
                        <% if (orders.length > 0) { %>
                            <% orders.forEach(order => { %>
                                <tr>
                                    <td><%= order.orderId %></td>
                                    <td><%= order.orderDate.toLocaleDateString() %></td>
                                    <td><%= order.userId.userName %> (<%= order.userId.email %>)</td>
                                    <td>$<%= order.total.toFixed(2) %></td>
                                    <td>
                                        <% if (['Pending', 'Processing', 'Shipped', 'Delivered'].includes(order.deliveryStatus) && order.paymentStatus !== 'Failed') { %>
                                            <select class="status-select" onchange="updateOrderStatus('<%= order.orderId %>', this.value)">
                                                <option value="Pending" <%= order.deliveryStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="Processing" <%= order.deliveryStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                                <option value="Shipped" <%= order.deliveryStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                                <option value="Delivered" <%= order.deliveryStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                            </select>
                                        <% } else { %>
                                            <span class="status-text"><%= order.deliveryStatus %></span>
                                            <% if (order.paymentStatus === 'Failed') { %>
                                                <span style="color: #dc3545;"> (Failed Order)</span>
                                            <% } %>
                                        <% } %>
                                    </td>
                                    <td>
                                        <a href="/admin/orders/details/<%= order.orderId %>" class="btn btn-view">View</a>
                                        <% if (order.deliveryStatus === 'Returned' && order.paymentStatus !== 'Refunded') { %>
                                            <button class="btn btn-verify" onclick="verifyReturn('<%= order.orderId %>')">Verify Return</button>
                                        <% } %>
                                    </td>
                                </tr>
                            <% }) %>
                        <% } else { %>
                            <tr><td colspan="6">No orders found.</td></tr>
                        <% } %>
                    </tbody>
                </table>
            </div>

            <div class="pagination">
                <% if (page > 1) { %>
                    <a href="/admin/orders/manage?page=<%= page - 1 %>&search=<%= encodeURIComponent(query.search) %>&status=<%= encodeURIComponent(query.status) %>">« Prev</a>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="/admin/orders/manage?page=<%= i %>&search=<%= encodeURIComponent(query.search) %>&status=<%= encodeURIComponent(query.status) %>" class="<%= page === i ? 'active' : '' %>"><%= i %></a>
                <% } %>
                <% if (page < totalPages) { %>
                    <a href="/admin/orders/manage?page=<%= page + 1 %>&search=<%= encodeURIComponent(query.search) %>&status=<%= encodeURIComponent(query.status) %>">Next »</a>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        function searchOrders() {
            const search = document.getElementById('searchInput').value;
            const status = document.getElementById('statusFilter').value;
            window.location.href = `/admin/orders/manage?page=1&search=${encodeURIComponent(search)}&status=${encodeURIComponent(status)}`;
        }

        function clearFilters() {
            window.location.href = '/admin/orders/manage?page=1';
        }

        function filterOrders() {
            searchOrders();
        }

        async function updateOrderStatus(orderId, status) {
            try {
                const response = await fetch(`/admin/orders/status/${orderId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ deliveryStatus: status })
                });
                const result = await response.json();
                if (!result.success) {
                    Swal.fire('Error', result.message || 'Failed to update status', 'error');
                    location.reload();
                }
            } catch (error) {
                Swal.fire('Error', error.message || 'Failed to update status', 'error');
                location.reload();
            }
        }

        async function verifyReturn(orderId) {
    const { value: choice } = await Swal.fire({
        title: 'Verify Return Request',
        html: `
            <p>Accept or reject the return request?</p>
            <button id="acceptBtn" class="swal2-btn swal2-confirm">Accept</button>
            <button id="rejectBtn" class="swal2-btn swal2-deny">Reject</button>
        `,
        showConfirmButton: false,
        showCancelButton: false,
        didOpen: () => {
            document.getElementById('acceptBtn').addEventListener('click', () => Swal.close({ value: 'accept' }));
            document.getElementById('rejectBtn').addEventListener('click', () => Swal.close({ value: 'reject' }));
        }
    });

    console.log('Choice:', choice);

    if (choice === 'accept') {
        try {
            const response = await fetch(`/admin/orders/verify-return/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ accepted: true })
            });
            const result = await response.json();
            if (result.success) {
                Swal.fire('Success', 'Return verified and refund processed', 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', result.message || 'Failed to verify return', 'error');
            }
        } catch (error) {
            Swal.fire('Error', error.message || 'Failed to verify return', 'error');
        }
    }
    else if (choice === 'reject') {
        try {
            const response = await fetch(`/admin/orders/verify-return/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ accepted: false })
            });
            const result = await response.json();
            if (result.success) {
                Swal.fire('Success', 'Return request rejected', 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', result.message || 'Failed to reject return', 'error');
            }
        } catch (error) {
            Swal.fire('Error', error.message || 'Failed to reject return', 'error');
        }
    }
}
    </script>
</body>
</html>