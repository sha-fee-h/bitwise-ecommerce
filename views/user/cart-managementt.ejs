<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        /* Modern Cart Page Styles */
.container {
    max-width: 900px;
    margin: auto;
    padding: 25px;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border-radius: 15px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease-in-out;
}

h2 {
    text-align: center;
    color: #1f2937;
    font-size: 2rem;
    font-weight: bold;
    margin-bottom: 20px;
}

/* Cart Items */
.cart-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: #f9fafb;
    padding: 20px;
    border-radius: 12px;
    margin-bottom: 15px;
    transition: transform 0.2s ease-in-out;
}

.cart-item:hover {
    transform: scale(1.02);
}

/* Product Image */
.cart-image {
    width: 80px;
    height: 80px;
    object-fit: cover;
    border-radius: 10px;
    border: 2px solid #e5e7eb;
    transition: all 0.3s ease-in-out;
}

.cart-image:hover {
    transform: scale(1.05);
    border-color: #2563eb;
}

/* Item Details */
.item-details p {
    margin: 0;
    font-size: 16px;
    color: #374151;
    font-weight: 500;
}

.item-details p strong {
    font-size: 18px;
    color: #1f2937;
}

/* Quantity Controls */
.quantity-controls {
    display: flex;
    align-items: center;
    gap: 12px;
    background: #eef2ff;
    padding: 5px 10px;
    border-radius: 8px;
}

/* Quantity Buttons */
.qty-btn {
    background: #2563eb;
    color: white;
    border: none;
    padding: 7px 12px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 16px;
    font-weight: bold;
    transition: all 0.2s ease-in-out;
}

.qty-btn:hover {
    background: #1d4ed8;
    transform: scale(1.1);
}

/* Remove Button */
.remove-btn {
    background: #dc2626;
    color: white;
    padding: 7px 12px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    transition: all 0.2s ease-in-out;
}

.remove-btn:hover {
    background: #b91c1c;
    transform: scale(1.05);
}

/* Move to Wishlist Button */
.wishlist-btn {
    background: #f59e0b;
    color: white;
    padding: 7px 12px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    transition: all 0.2s ease-in-out;
}

.wishlist-btn:hover {
    background: #d97706;
    transform: scale(1.05);
}

/* Summary Section */
.summary {
    text-align: center;
    padding: 15px;
    font-size: 20px;
    font-weight: bold;
    background: #f1f5f9;
    border-radius: 12px;
    margin-top: 20px;
}

.summary p {
    margin: 5px 0;
}

/* Empty Cart Message */
.empty-cart {
    text-align: center;
    font-size: 18px;
    color: #6b7280;
    padding: 30px;
    font-weight: 500;
}

/* Responsive Design */
@media (max-width: 768px) {
    .cart-item {
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .quantity-controls {
        margin-top: 10px;
    }

    .cart-image {
        width: 70px;
        height: 70px;
    }
}

    </style>
    <link rel="icon" type="image/png" href="images/icons/favicon.png" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/bootstrap/css/bootstrap.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/fonts/font-awesome-4.7.0/css/font-awesome.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/fonts/iconic/css/material-design-iconic-font.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/fonts/linearicons-v1.0.0/icon-font.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/animate/animate.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/css-hamburgers/hamburgers.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/animsition/css/animsition.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/select2/select2.min.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/daterangepicker/daterangepicker.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/slick/slick.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/MagnificPopup/magnific-popup.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/vendor/perfect-scrollbar/perfect-scrollbar.css" />
    <!--===============================================================================================-->
    <link rel="stylesheet" type="text/css" href="/css/user/util.css" />
    <link rel="stylesheet" type="text/css" href="/css/user/main.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/css/user/header.css" />   
</head>
<body>

    <%- include('./partials/header.ejs') %>

    <div class="container">
        <h2>Shopping Cart</h2>
        <div id="cartItems">
            <!-- Cart Items will be injected here dynamically -->
        </div>
        <div class="summary">
            <p>Total: <span id="totalPrice">₹0</span></p>
            <p>Discount: <span id="discount">₹0</span></p>
            <button id="checkoutBtn" class="checkout-btn" disabled onclick="checkout()">Proceed to Checkout</button>
        </div>
    </div>
    
    <script>
        document.addEventListener("DOMContentLoaded", async () => {
            await loadCart();
        });
    
        async function loadCart() {
            try {
                const response = await fetch("/cart/data");
                if (!response.ok) throw new Error("Failed to fetch cart");
    
                const cart = await response.json();
                const cartItemsContainer = document.getElementById("cartItems");
                const checkoutBtn = document.getElementById("checkoutBtn");
                cartItemsContainer.innerHTML = ""; 
                
                let totalPrice = 0;
                let totalDiscount = 0;
                let allInStock = true; 
    
                if (cart.products.length === 0) {
                    cartItemsContainer.innerHTML = `<p class="empty-cart">Your cart is empty.</p>`;
                    document.getElementById("totalPrice").innerText = "₹0";
                    document.getElementById("discount").innerText = "₹0";
                    checkoutBtn.disabled = true;
                    return;
                }
    
                cart.products.forEach(product => {
                    const stockAvailable = product.productId.stock; // Get stock count
                    const isOutOfStock = stockAvailable < product.quantity;
    
                    if (isOutOfStock) allInStock = false;
    
                    totalPrice += product.productTotal;
                    totalDiscount += product.offerDiscount || 0;
    
                    const productHTML = `
                        <div class="cart-item">
                            <a href="/products/product-detail/${product.productId._id}">
                                <img src="/uploads/${product.productId.images[0]}" alt="${product.productId.name}" class="cart-image">
                            </a>
                            <div class="item-details">
                                <p><strong>${product.productId.name}</strong></p>
                                <p>Price: ₹${product.price}</p>
                                <p class="${isOutOfStock ? 'out-of-stock' : 'in-stock'}">
                                    Stock: ${stockAvailable > 0 ? stockAvailable : "Out of Stock"}
                                </p>
                            </div>
                            <div class="quantity-controls">
                                <button class="qty-btn" onclick="updateQuantity('${product.productId._id}', -1)" ${isOutOfStock ? "disabled" : ""}>-</button>
                                <span class="quantity">${product.quantity}</span>
                                <button class="qty-btn" onclick="updateQuantity('${product.productId._id}', 1)" ${isOutOfStock ? "disabled" : ""}>+</button>
                            </div>
                            <div class="actions">
                                <button class="remove-btn" onclick="removeFromCart('${product.productId._id}')">Remove</button>
                                <button class="wishlist-btn" onclick="moveToWishlist('${product.productId._id}')">Move to Wishlist</button>
                            </div>
                        </div>
                    `;
                    cartItemsContainer.innerHTML += productHTML;
                });
    
                document.getElementById("totalPrice").innerText = `₹${totalPrice}`;
                document.getElementById("discount").innerText = `₹${totalDiscount}`;
                
                
                checkoutBtn.disabled = !allInStock;
    
            } catch (error) {
                console.error("Error loading cart:", error);
                document.getElementById("cartItems").innerHTML = `<p class="error">Error loading cart. Please try again.</p>`;
            }
        }
    
    
    

    async function updateQuantity(productId, change) {
    try {
        const response = await fetch(`/cart/update/${productId}`, {
            method: "PATCH",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ change })
        });

        const result = await response.json();
        if (!result.success) {
            throw new Error(result.error || "Failed to update quantity");
        }

        // Show success alert and reload cart
        

        await loadCart(); // Reload the cart after update

    } catch (error) {
        console.error("Error updating quantity:", error);
        Swal.fire({
            icon: "error",
            title: "Error!",
            text: error.message || "Failed to update quantity.",
        });
    }
}


    async function removeFromCart(productId) {
        try {
            const response = await fetch(`/cart/remove/${productId}`, { method: "DELETE" });

            const result = await response.json();
            if (response.ok &&result.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Removed from Cart",
                                    text: "Product has been removed from your cart!",
                                    showConfirmButton: false,
                                    timer: 2000
                                });
        await loadCart(); 

                            } else {
                                throw new Error(result.error || "Failed to remove from cart.");
                            }
                        } catch (error) {
                            console.log("Error in remvoe from cart", error)
                            Swal.fire({
                                icon: "error",
                                title: "Error!",
                                text: error.message || "Something went wrong.",
                            });
                        }
    }

    async function moveToWishlist(productId) {
        try {
            const response = await fetch(`/cart/move-to-wishlist/${productId}`, { method: "PATCH" });

            const result = await response.json();
            if (response.ok &&result.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Moved To Wishlist",
                                    text: "Product has been moved to wishlist!",
                                    showConfirmButton: false,
                                    timer: 2000
                                });
        await loadCart(); 

                            } else {
                                throw new Error(result.error || "Failed to move to wishlist.");
                            }
                        } catch (error) {
                            console.log("Error in moving to wishlist", error)
                            Swal.fire({
                                icon: "error",
                                title: "Error!",
                                text: error.message || "Something went wrong.",
                            });
                        }

    }

    function checkout() {
        const cartItems = document.querySelectorAll(".cart-item");

        if (cartItems.length === 0) {
            alert("Your cart is empty!");
            return;
        }

        const outOfStockItems = document.querySelectorAll(".out-of-stock");
        if (outOfStockItems.length > 0) {
            alert("Some products in your cart are out of stock. Please remove them before checkout.");
            return;
        }

        // Redirect to checkout page
        window.location.href = "/checkout";
    }


</script>

<style>
    

    .item-details p {
        margin: 0;
        font-size: 14px;
        color: #555;
    }

    .in-stock {
        color: #16a34a;
        font-weight: bold;
    }

    .out-of-stock {
        color: #ef4444;
        font-weight: bold;
    }

    

    .qty-btn:disabled {
        background: #94a3b8;
        cursor: not-allowed;
    }

    

    .summary {
        text-align: center;
        padding: 15px;
        font-size: 18px;
        font-weight: bold;
        background: #f1f5f9;
        border-radius: 12px;
        margin-top: 20px;
    }

    .checkout-btn {
        background: #2563eb;
        color: white;
        border: none;
        padding: 12px 20px;
        border-radius: 8px;
        cursor: pointer;
        font-size: 18px;
        font-weight: bold;
        transition: all 0.2s ease-in-out;
        width: 100%;
        margin-top: 15px;
    }

    .checkout-btn:disabled {
        background: #94a3b8;
        cursor: not-allowed;
    }
</style>

</body>
</html>
